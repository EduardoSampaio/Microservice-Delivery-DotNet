name: Build and Test .NET Project

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - name: Restore dependencies MicroserviceDeliveryAPP    
      run: dotnet restore MicroserviceDeliveryAPP.sln
    - name: Build MicroserviceDeliveryAPP
      run: dotnet build MicroserviceDeliveryAPP.sln 
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
      
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Test
        run: dotnet test MicroserviceDeliveryAPP.sln --no-restore --verbosity normal

  docker:
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Docker Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Docker Build and Push Catalog
      run: |
        docker build -f ./Catalog/Presentation/Catalog.Api/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/microservice-catalog:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/microservice-catalog:latest
    - name: Docker Build and Push Order
      run: |
        docker build -f ./Order/Adapters/Primary/Order.Api/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/microservice-order:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/microservice-order
    - name: Docker Build and Push Gateway
      run: |
        docker build -f ./Gateway/Gateway.Api/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/microservice-gateway:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/microservice-gateway